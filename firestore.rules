rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isValidPin(pin) {
      return pin is number && pin >= 0 && pin <= 9999;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }
    
    // Confessions collection
    match /confessions/{confessionId} {
      // Allow reading confessions without authentication
      allow read: if true;
      
      // Allow creating if signed in and data is valid
      allow create: if isSignedIn() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.content is string
        && request.resource.data.type is string
        && request.resource.data.pin is number;
      
      // Allow updates only by the owner or for view count
      allow update: if 
        isSignedIn() && (
          isOwner(resource.data.userId) ||
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views', 'isHidden'])
        );
      
      // Allow deletion only by the owner
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Hidden confessions collection
    match /hiddenConfessions/{hiddenId} {
      // Allow reading own hidden confessions
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      
      // Allow hiding confessions
      allow create: if 
        isSignedIn() && 
        request.resource.data.userId == request.auth.uid;
        
      // Allow unhiding confessions
      allow delete: if 
        isSignedIn() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Replies collection
    match /replies/{replyId} {
      // Allow reading replies without authentication
      allow read: if true;
      
      // Allow creating if signed in
      allow create: if isSignedIn() 
        && request.resource.data.userId == request.auth.uid;
      
      // Allow deletion only by the owner
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Templates collection
    match /templates/{templateId} {
      // Templates can be read by anyone
      allow read: if true;
      // Only admins can modify templates
      allow write: if false;
    }
  }
}
