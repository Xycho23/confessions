rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidPin() {
      let pin = request.resource.data.pin;
      return pin is number && pin >= 0 && pin <= 9999;
    }
    
    function isValidConfessionType() {
      let validTypes = ['letter', 'card', 'note', 'poem', 'story'];
      return request.resource.data.type in validTypes;
    }

    function isOnlyUpdatingViews(existingData, incomingData) {
      let allowedFields = ['views', 'updatedAt'];
      let changedFields = incomingData.diff(existingData).affectedKeys();
      return changedFields.hasOnly(allowedFields);
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isSignedIn() && isOwner(userId);
    }
    
    // Confessions collection
    match /confessions/{confessionId} {
      // Allow reading any confession
      allow read: if true;
        
      // Allow creating if signed in
      allow create: if 
        isSignedIn() && 
        request.resource.data.userId == request.auth.uid &&
        isValidPin() &&
        isValidConfessionType();
        
      // Allow updating own confessions or just the view count
      allow update: if 
        isSignedIn() && resource.data.userId == request.auth.uid ||
        isOnlyUpdatingViews(resource.data, request.resource.data);
        
      // Allow deleting own confessions
      allow delete: if 
        isSignedIn() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Hidden confessions collection
    match /hiddenConfessions/{hiddenId} {
      // Allow reading own hidden confessions
      allow read: if isSignedIn() && request.auth.uid == resource.data.userId;
      
      // Allow hiding confessions
      allow create: if 
        isSignedIn() && 
        request.resource.data.userId == request.auth.uid;
        
      // Allow unhiding confessions
      allow delete: if 
        isSignedIn() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Replies collection
    match /replies/{replyId} {
      // Allow reading replies
      allow read: if true;
      
      // Allow creating replies if signed in and PIN is valid
      allow create: if 
        isSignedIn() && 
        request.resource.data.userId == request.auth.uid &&
        isValidPin();
        
      // Allow deleting own replies
      allow delete: if 
        isSignedIn() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Templates collection
    match /templates/{templateId} {
      // Templates can be read by anyone
      allow read: if true;
      // Only admins can modify templates
      allow write: if false;
    }
  }
}
